MISN_EFFECT = [
    0x0A, 0x39, 
    0x1B, 0x0D, 
    0x29, 0x0F, 
    0x04,
    0x1F, 
    0x04, 
    0x06, 0x6E,
    0x08, 0x0A,
    0x58, 
    0x02, 0x18, 
    0x11, 0x00, 
    0xBE, 0x00, 
    0x02, 0x00, 
    0x0B, 0x04,
    0x1F, 0x04, 
    0x18, 0x02, 
    0x0A, 0xB9, 
    0x00, 0x00, 
    0xBF, 0x00, 
    0x28, 0x04,
    0x0D, 0x20, 
    0x0A, 0x63, 
    0x08, 0x23, 
    0x56, 0x02, 
    0x12, 0x11, 
    0x0F, 0x04,
    0x1F, 0x04, 
    0x0A, 0x62, 
    0x08, 0x23, 
    0x56, 0x07, 
    0x12, 0x10, 
    0x0F, 0x04,
    0x1F, 0x04, 
    0x0A, 0x61, 
    0x08, 0x23, 
    0x56, 0x06, 
    0x12, 0x0F, 
    0x0F, 0x04,
    0x1F, 0x04, 
    0x0A, 0x67, 
    0x08, 0x23, 
    0x56, 0x05, 
    0x12, 0x0E, 
    0x0F, 0x04,
    0x1F, 0x04, 
    0x0A, 0x5F, 
    0x08, 0x23, 
    0x56, 0x08, 
    0x12, 0x0D, 
    0x0F, 0x04,
    0x1F, 0x04, 
    0x0A, 0x5E, 
    0x08, 0x23, 
    0x56, 0x04, 
    0x12, 0x0C, 
    0x0F, 0x04,
    0x1F, 0x04, 
    0x0A, 0x5D, 
    0x08, 0x23, 
    0x56, 0x03, 
    0x12, 0x0D, 
    0x0F, 0x04,
    0x1F, 0x04, 
    0x0A, 0x66, 
    0x08, 0x23, 
    0x56, 0x02, 
    0x12, 0x0A, 
    0x0F, 0x04,
    0x1F, 0x04, 
    0x23, 0x56, 
    0x01, 0x12, 
    0x09, 0x0F, 
    0x04, 0x1F, 
    0x04, 0x07,
    0xD0, 0x07, 
    0x07, 0xD1, 
    0x07, 0x07, 
    0xD2, 0x07, 
    0x07, 0xE8, 
    0x03, 0x06,
    0x71, 0x08, 
    0x07, 0xB8, 
    0x08, 0x0A, 
    0x59, 0x02, 
    0x00, 0xB9, 
    0x00, 0x1F,
    0x04, 
    0x0D, 0x01,
    0x0C, 0x00,
    0x0A, 0x70,
    0x08, 0x0A, 
    0x59, 0x02, 
    0x07, 0x70,
    0x08, 0x06,
    0x6E, 
    0x08, 0x07, 
    0x59, 0x02, 
    0x1F, 0x04, 
    0x1F, 0x04,
    0x0A, 0x6F, 
    0x08, 0x0A, 
    0x59, 0x02, 
    0x06, 0x70, 
    0x08, 0x07, 
    0x6F, 0x08,
    0x07, 0x59, 
    0x02, 0x1F, 
    0x04, 0x1F, 
    0x04, 0x0A, 
    0x6E, 0x08, 
    0x0A, 0x59,
    0x02, 0x06, 
    0x6F, 0x08, 
    0x07, 0x6E, 
    0x08, 0x07, 
    0x59, 0x02, 
    0x1F, 0x04,
    0x1F, 0x04, 
    0x0A, 0x97, 
    0x08, 0x0A, 
    0x24, 0x09, 
    0x00, 0x34, 
    0x01, 0x07,
    0x24, 0x09, 
    0x02, 0x00, 
    0x1F, 0x04, 
    0x0A, 0x25, 
    0x09, 0x00, 
    0x35, 0x01,
    0x07, 0x25, 
    0x09, 0x02, 
    0x00, 0x1F, 
    0x04, 0x0A, 
    0x26, 0x09, 
    0x00, 0x36,
    0x01, 0x07, 
    0x26, 0x09, 
    0x02, 0x00, 
    0x1F, 0x04, 
    0x0A, 0x27, 
    0x09, 0x00,
    0x37, 0x01, 
    0x07, 0x27, 
    0x09, 0x02, 
    0x00, 0x1F, 
    0x04, 0x0A, 
    0x28, 0x09,
    0x00, 0x38, 
    0x01, 0x07, 
    0x28, 0x09, 
    0x02, 0x00, 
    0x1F, 0x04, 
    0x0A, 0x29,
    0x09, 0x00, 
    0x39, 0x01, 
    0x07, 0x29, 
    0x09, 0x02, 
    0x00, 0x1F, 
    0x04, 0x1F,
    0x04, 0x07, 
    0x97, 0x08, 
    0x06, 0x5C, 
    0x08, 0x06, 
    0x34, 0x08, 
    0x23, 0x51,
    0x07, 0x23, 
    0x52, 0x0B, 
    0x23, 0x53, 
    0x29, 0x0E, 
    0x04
]

MISS1_EFFECT = [
    0x0A, 0x58, 0x02, 0x18, 0x11, 0x00, 0xBE, 0x00, 0x02, 0x00, 0x0B, 0x04,
	0x1F, 0x04, 0x18, 0x02, 0x0A, 0xB9, 0x00, 0x00, 0xBF, 0x00, 0x28, 0x04,
	0x0D, 0x20, 0x0A, 0x63, 0x08, 0x23, 0x56, 0x02, 0x12, 0x11, 0x0F, 0x04,
	0x1F, 0x04, 0x0A, 0x62, 0x08, 0x23, 0x56, 0x07, 0x12, 0x10, 0x0F, 0x04,
	0x1F, 0x04, 0x0A, 0x61, 0x08, 0x23, 0x56, 0x06, 0x12, 0x0F, 0x0F, 0x04,
	0x1F, 0x04, 0x0A, 0x67, 0x08, 0x23, 0x56, 0x05, 0x12, 0x0E, 0x0F, 0x04,
	0x1F, 0x04, 0x0A, 0x5F, 0x08, 0x23, 0x56, 0x08, 0x12, 0x0D, 0x0F, 0x04,
	0x1F, 0x04, 0x0A, 0x5E, 0x08, 0x23, 0x56, 0x04, 0x12, 0x0C, 0x0F, 0x04,
	0x1F, 0x04, 0x0A, 0x5D, 0x08, 0x23, 0x56, 0x03, 0x12, 0x0D, 0x0F, 0x04,
	0x1F, 0x04, 0x0A, 0x66, 0x08, 0x23, 0x56, 0x02, 0x12, 0x0A, 0x0F, 0x04,
	0x1F, 0x04, 0x23, 0x56, 0x01, 0x12, 0x09, 0x0F, 0x04, 0x1F, 0x04, 0x07,
	0xD0, 0x07, 0x07, 0xD1, 0x07, 0x07, 0xD2, 0x07, 0x07, 0xE8, 0x03, 0x06,
	0x71, 0x08, 0x07, 0xB8, 0x08, 0x0A, 0x59, 0x02, 0x00, 0xB9, 0x00, 0x1F,
	0x04, 0x00, 0x96, 0x00, 0x0D, 0x02, 0x0C, 0x01, 0x06, 0x48, 0x08, 0x06,
	0x49, 0x08, 0x06, 0x4E, 0x08, 0x0A, 0x70, 0x08, 0x0A, 0x59, 0x02, 0x07,
	0x70, 0x08, 0x06, 0x6E, 0x08, 0x07, 0x59, 0x02, 0x1F, 0x04, 0x1F, 0x04,
	0x0A, 0x6F, 0x08, 0x0A, 0x59, 0x02, 0x06, 0x70, 0x08, 0x07, 0x6F, 0x08,
	0x07, 0x59, 0x02, 0x1F, 0x04, 0x1F, 0x04, 0x0A, 0x6E, 0x08, 0x0A, 0x59,
	0x02, 0x06, 0x6F, 0x08, 0x07, 0x6E, 0x08, 0x07, 0x59, 0x02, 0x1F, 0x04,
	0x1F, 0x04, 0x0A, 0x97, 0x08, 0x0A, 0x24, 0x09, 0x00, 0x34, 0x01, 0x07,
	0x24, 0x09, 0x02, 0x00, 0x1F, 0x04, 0x0A, 0x25, 0x09, 0x00, 0x35, 0x01,
	0x07, 0x25, 0x09, 0x02, 0x00, 0x1F, 0x04, 0x0A, 0x26, 0x09, 0x00, 0x36,
	0x01, 0x07, 0x26, 0x09, 0x02, 0x00, 0x1F, 0x04, 0x0A, 0x27, 0x09, 0x00,
	0x37, 0x01, 0x07, 0x27, 0x09, 0x02, 0x00, 0x1F, 0x04, 0x0A, 0x28, 0x09,
	0x00, 0x38, 0x01, 0x07, 0x28, 0x09, 0x02, 0x00, 0x1F, 0x04, 0x0A, 0x29,
	0x09, 0x00, 0x39, 0x01, 0x07, 0x29, 0x09, 0x02, 0x00, 0x1F, 0x04, 0x1F,
	0x04, 0x07, 0x97, 0x08, 0x23, 0x56, 0x00, 0x12, 0x00, 0x23, 0x51, 0x01,
	0x24, 0x01, 0x2A, 0x0A, 0x7E, 0x08, 0x07, 0x7E, 0x08, 0x06, 0x92, 0x08,
	0x00, 0x0F, 0x01, 0x06, 0xA2, 0x08, 0x06, 0xA3, 0x08, 0x1F, 0x04, 0x0A,
	0x7C, 0x08, 0x09, 0xA3, 0x08, 0x07, 0x7C, 0x08, 0x06, 0x90, 0x08, 0x00,
	0x0D, 0x01, 0x06, 0xA2, 0x08, 0x06, 0xA3, 0x08, 0x1F, 0x04, 0x1F, 0x04,
	0x0A, 0x7A, 0x08, 0x09, 0xA3, 0x08, 0x07, 0x7A, 0x08, 0x06, 0x8E, 0x08,
	0x00, 0x0B, 0x01, 0x06, 0xA2, 0x08, 0x06, 0xA3, 0x08, 0x1F, 0x04, 0x1F,
	0x04, 0x0A, 0x7B, 0x08, 0x09, 0xA3, 0x08, 0x07, 0x7B, 0x08, 0x06, 0x8F,
	0x08, 0x00, 0x0C, 0x01, 0x06, 0xA2, 0x08, 0x06, 0xA3, 0x08, 0x1F, 0x04,
	0x1F, 0x04, 0x0A, 0x7D, 0x08, 0x09, 0xA3, 0x08, 0x07, 0x7D, 0x08, 0x06,
	0x91, 0x08, 0x00, 0x0E, 0x01, 0x06, 0xA2, 0x08, 0x06, 0xA3, 0x08, 0x1F,
	0x04, 0x1F, 0x04, 0x0A, 0x7F, 0x08, 0x09, 0xA3, 0x08, 0x07, 0x7F, 0x08,
	0x06, 0x93, 0x08, 0x00, 0x10, 0x01, 0x06, 0xA2, 0x08, 0x06, 0xA3, 0x08,
	0x1F, 0x04, 0x1F, 0x04, 0x0A, 0x80, 0x08, 0x09, 0xA3, 0x08, 0x07, 0x80,
	0x08, 0x06, 0x94, 0x08, 0x00, 0x11, 0x01, 0x06, 0xA2, 0x08, 0x06, 0xA3,
	0x08, 0x1F, 0x04, 0x1F, 0x04, 0x0A, 0x81, 0x08, 0x09, 0xA3, 0x08, 0x07,
	0x81, 0x08, 0x06, 0x95, 0x08, 0x00, 0x12, 0x01, 0x06, 0xA2, 0x08, 0x06,
	0xA3, 0x08, 0x1F, 0x04, 0x1F, 0x04, 0x0A, 0x52, 0x08, 0x0A, 0x54, 0x08,
	0x07, 0x52, 0x08, 0x06, 0x4F, 0x08, 0x00, 0xBC, 0x00, 0x06, 0xA2, 0x08,
	0x1F, 0x04, 0x1F, 0x04, 0x0A, 0x53, 0x08, 0x0A, 0x55, 0x08, 0x07, 0x53,
	0x08, 0x06, 0x4F, 0x08, 0x06, 0x50, 0x08, 0x00, 0xBD, 0x00, 0x06, 0xA5,
	0x08, 0x23, 0x49, 0x02, 0x06, 0xA2, 0x08, 0x1F, 0x04, 0x1F, 0x04, 0x0A,
	0x50, 0x08, 0x07, 0x50, 0x08, 0x06, 0xA2, 0x08, 0x06, 0x50, 0x08, 0x0A,
	0xA2, 0x08, 0x07, 0xA2, 0x08, 0x07, 0xA3, 0x08, 0x00, 0x13, 0x01, 0x06,
	0xB8, 0x08, 0x07, 0x34, 0x08, 0x07, 0x35, 0x08, 0x07, 0x3A, 0x08, 0x07,
	0x36, 0x08, 0x07, 0x37, 0x08, 0x07, 0x38, 0x08, 0x07, 0x39, 0x08, 0x07,
	0x3E, 0x08, 0x07, 0x3F, 0x08, 0x07, 0x40, 0x08, 0x07, 0x41, 0x08, 0x07,
	0x42, 0x08, 0x07, 0x43, 0x08, 0x1F, 0x04, 0x1F, 0x04, 0x0A, 0xA2, 0x08,
	0x07, 0xA2, 0x08, 0x07, 0xA3, 0x08, 0x00, 0x13, 0x01, 0x06, 0xB8, 0x08,
	0x07, 0x34, 0x08, 0x07, 0x35, 0x08, 0x07, 0x3A, 0x08, 0x07, 0x36, 0x08,
	0x07, 0x37, 0x08, 0x07, 0x38, 0x08, 0x07, 0x39, 0x08, 0x07, 0x3E, 0x08,
	0x07, 0x3F, 0x08, 0x07, 0x40, 0x08, 0x07, 0x41, 0x08, 0x07, 0x42, 0x08,
	0x07, 0x43, 0x08, 0x1F, 0x04, 0x06, 0xB8, 0x08, 0x06, 0x34, 0x08, 0x06,
	0x3F, 0x08, 0x01, 0x00
]

OPCODE = {
    0x00: ("CONV", 2),
    0x01: ("PLAY SCENE", 1),
    0x02: ("PLAY SHOT", 1),
    0x03: ("FLY MISSION AND GOTO NEXT MISSION", 1),
    0x06: ("SET TRUE", 2),
    0x07: ("SET FALSE", 2),
    0x0A: ("IF", 2),
    0x09: ("IF NOT", 2),
    0x0C: ("PLAY FLY MISSION", 1),
    0x0D: ("SET NEXT MISSION", 1),
    0x0E: ("GOTO MISSION", 1),
    0x0F: ("GOTO NEXT MISSION", 1),
    0x14: ("IF MISSION ACCEPTED", 1),
    0x15: ("IF MISSION REFUSED", 1),
    0x1E: ("ELSE", 1),
    0x1F: ("ENDIF", 1),
    0x20: ("IF MISSION SUCCESSFULL", 1),
    0x22: ("APPLY CHANGES", 1),
    0x0B: ("UNKOWN_0B", 1),
    0x18: ("UNKOWN_18", 1),
    0x23: ("UNKOWN_23", 2),
    0x24: ("UNKOWN_24", 2),
    0x12: ("SHOW MAP", 1),
    0x28: ("UNKOWN_28", 1),
}

def decode_effect(effect_bytes):
    max_bytes = len(effect_bytes)
    i = 0
    dec = 0
    while i < max_bytes:
        a = effect_bytes[i]
        if a in OPCODE:
            name, param_count = OPCODE[a]
            if "ENDIF" in name:
                dec = dec - 4
            if i + param_count < len(effect_bytes):
                params = effect_bytes[i + 1: i + 1 + param_count]
                if param_count == 2:
                    param_short_int = params[0] + (params[1] << 8)
                    params_str_bytes = ", ".join([f"{p} [0x{p:02X}]" for p in params])
                    param_str = f"short value : {param_short_int} [0x{param_short_int:04X}] {params_str_bytes}"
                else:
                    param_str = ", ".join([f"{p} [0x{p:02X}]" for p in params])
                print(" " * dec +f"[0x{a:02X}] {name} {param_str}")
                i = i + param_count
            if "IF" in name and "ENDIF" not in name:
                dec = dec + 4
            
        else :
            print(" " * dec +f"Unknown byte: 0x{a:02X}")
        i = i + 1

decode_effect(MISN_EFFECT)
print("\n--- MISS1 EFFECT ---\n")
decode_effect(MISS1_EFFECT)
